Reorg whitepaper version 0.1

Copyright (c) 2014 Amos Bairn

See LICENSE for license details

# Introduction #

The Bitcoin blockchain is an unprecedented tool for decentralized and
transparent consensus, record keeping, rule enforcement and accountability.
By applying these tools to organizations we can create organizations that are
more transparent and democratic and less susceptible to corruption. To this end
I propose a protocol, which I call Reorg, for creating, managing and
interacting with organizations on a blockchain.

# Parts #

There are four types of things that Reorg keeps track of: individuals, groups,
positions, tokens and statuses.

## Individuals ##

Individuals are identified by a cryptographic key pair, or address, like in
Bitcoin. This will usually, but not necessarily always, be controlled by a single
natural person. 

Note: "Individual" as defined here is ephemeral, like a Bitcoin address. A
single person could control multiple Individual identities. The term
"individual" is used here to distinguish it from groups (see below for more on
groups).

Individuals have:

* Address: a Bitcoin like address, identifying the individual identity and
allowing for the verification of a public key.
* Accounts: a set of tokens the individual has and the amount held in each.
* Groups: a set of groups for which the individual is a member.
* Positions: a set of positions that the individual holds
* Statuses: a set of statuses that apply to the individual.

## Groups ##

A group is like a corporation. It is an entity that consists of a collection of
member individuals and groups. It can receive and spend tokens, take actions and
vote in groups of which it is a part.

Groups have:

* Membership Status: a status that is defined as being membership in the group.
Any individual or group that has this status is a member of the group.
* Members: a set of individuals and groups that have membership status.
* Positions: Positions that can be held by members.
* Accounts: a set of tokens the group has and the amount held in each.
* Statuses: a set of statuses that apply to the group.
* Voting criteria: a criteria that is evaluated for each member and position to
determine if they can vote and how much weight their vote holds.
* Vote type: the type of voting that will be used by this group, e.g. plurality
voting, instant runoff, approval voting, etc.

## Positions ##

Positions are roles in a group that can be held by individuals or groups,
according to the rules of the group.

Positions carry their own statuses and voting powers. Positions can optionally
have accounts that they control.

## Tokens ##

Meta-coins that can be issued, received, held, and spent by individuals and
groups, subject to the rules of the token.

## Statuses ##

Statuses are boolean flags that can be applied to individuals and groups. They
can represent things like group membership, position within an organization,
permissions, and so forth.

Statuses have:

* Application rules: A rule set that must be satisfied for an individual or
group to obtain the status.
* Removal rules: A rule set that determines when an individual or group loses
the status.

# Examples #

## Sports league ##

The Marsupial League is a group with the following members:

* The Commissioner, a position
* The Raging Roos, a group
* The King Koalas, a group
* The Tasmanian Devils, a group

Each team has:

* Coach
* Players

## Corporation ##

### Founding ###

Bob wants to start a corporation. He creates a group, BobCorp, and a token,
BobCorp_Stock.

BobCorp_Stock has these rules:

* Bob gets 51,000 units.
* 49,000 units will be divided amongst addresses that send Reorgcoin to the
BobCorp account before a specified time.

The rule for admission to the BobCorp group is:

    identity.tokens.BobCorp_Stock > 0

The rule for removal from membership in BobCorp is:

    identity.tokens.BobCorp_Stock == 0

The voting criteria for BobCorp is:

    vote_weight = identity.tokens.BobCorp_Stock

### Establishment of the board ###

Bob creates a new group BobCorp_Board.

The rules for admission to BobCorp_Board are:

    BobCorp_Board.member_size < 12 // Bob wants to limit the board to 12 people.
    AND identity.is_individual // Bob doesn't want groups as members of the board.
    AND BobCorp.passed(elect(identity, "Board Member")) // The BobCorp share holders have to pass a resolution to elect the individual.

### Officers ###

BobCorp_Board votes to create BobCorp_Officers, with these positions:

* CEO
* COO
* CFO

